#  -------------------------------------------------------------------------
# 
#  	FileName: .tmux.conf
#  	Version:   1.1
#  	Created:   05/31/2015
#	Author:	   H.M.Yang,(hmyang07@gmail.com)
# 
#  -------------------------------------------------------------------------

#-- base --#
set -g default-terminal "screen"
# 提示信息的持续时间;设置足够的时间以避免看不清提示，单位毫秒
set -g display-time 3000 
# 每个窗口中可展示的历史行数
set -g history-limit 65535 
#----------------------------------------------

#将默认按键前缀改为与C-a避免与终端快捷键冲突
set-option -g prefix C-a
unbind-key C-b
bind-key C-a send-prefix
#----------------------------------------------

#按键绑定 bind key

#水平或垂直分割窗口 (C+A+ :split-window + v/h)
unbind '"'
bind - splitw -v #分割成上下两个窗口
unbind %
bind | splitw -h #分割成左右两个窗口
#----------------------------------------------

#选择分割的窗格
bind k selectp -U #选择上窗格
bind j selectp -D #选择下窗格
bind h selectp -L #选择左窗格
bind l selectp -R #选择右窗格
#----------------------------------------------

#重新调整窗格的大小
bind ^k resizep -U 10
bind ^j resizep -D 10
bind ^h resizep -L 10
bind ^l resizep -R 10
#----------------------------------------------

#交换两个窗格
bind ^u swapp -U
bind ^d swapp -D

bind ^a last
bind q killp	# 关闭pane
#----------------------------------------------

#----------------------------------------------
# 绑定r用于重载配置文件，重载后显示"Reloaded!"
bind r source-file ~/.tmux.conf\; display "Reloaded!"
#
bind '~' splitw htop
bind ! splitw ncmpcpp
bind m command-prompt "splitw -h 'exec man %%'"

unbind s

#----------------------------------------------
# vi mode
setw -g mode-keys vi
set  -g status-keys vi
# 将复制粘贴设为类似vi的模式，使用<ESC>进入复制模式，v进入粘贴模式，选择后
# y进行复制。<Prefix-p>进行粘贴
# copy and past like in vim
unbind [
bind Escape copy-mode
unbind p
bind   p paste-buffer
bind  -t vi-copy 'v' begin-selection
bind  -t vi-copy 'y' copy-selection 

#----------------------------------------------
set -g set-clipboard on
# move x clipboard into tmux paste buffer
bind C-p run "tmux set-buffer \"$(xclip -o -sel clipbaord)\"; tmux paste-buffer"
# move tmux copy buffer into x clipboard
bind C-y run "tmux show-buffer | xclip -i -sel clipbaord"

#----------------------------------------------

#定制状态行

# status bar
set -g status-utf8 on			# 状态栏使用utf8字符集
set -g status-bg black			# 状态栏背景色为黑色
set -g status-fg white			# 状态栏前景色为白色
set -g status-interval 1		# 状态栏刷新频率为1秒

set -g status-right-attr bright
set -g status-left "#[fg=white,bg=blue] > #I < #[default] |" # 0:bash
#set -g status-left "#[fg=white,bg=blue] > #I < #[default] |" # session-name
set -g status-right "#[fg=yellow,bright][ #[fg=cyan]#W #[fg=yellow]]#[default] #[fg=yellow,bright]- %Y.%m.%d #[fg=green]%H:%M #[default]"


#----------------------------------------------
# window  
set -w -g utf8 on	# 窗口显示内容使用utf8字符集显示
setw -g window-status-current-attr bright
# 当前选中窗口背景色为红/绿色
#setw -g window-status-current-bg red
setw -g window-status-current-bg green
setw -g window-status-current-fg white


#----------------------------------------------
# Activity Monitoring
#setw -g monitor-activity on
#set  -g visual-activity on

#----------------------------------------------
# mouse 
# 开启鼠标控制
# setw -g mode-mouse on
# 开启鼠标可调整pane大小
#setw -g mouse-resize-pane on
# 开启鼠标可选择pane
#setw -g mouse-select-pane on
# 开启鼠标可选择窗口
#setw -g mouse-select-window on

#----------------------------------------------
# 默认启动应用
#  
# new -s work # 新建名为 work 的会话，并启动 mutt
# neww rtorrent # 启动 rtorrent
# neww vim # 启动 vim
# neww zsh
# selectw -t 3 # 默认选择标号为 3 的窗口 ]" "'

#----------------------------------------------
# session 
# tmux new    -s session_name # 创建一个叫做session_name的tmux session 
# tmux attach -t session_name # 重新开启一个叫做session_name的tmux session  
# tmux switch -t session_name # 转换到一个叫做session_name的tmux session  	
# tmux list-session           # 列出现有的所有session
# tmux ls				      # 列出现有的所有session
# tmux detach (prefix-d)      # 离开当前开启的session
# tmux rename-session -t [current-name] [new-name] # 重命名session
#

#----------------------------------------------
# 绑定r用于重载配置文件，重载后显示"Reloaded!"
bind D source-file ~/.tmux/dev.layout\; display "Layout loaded!"
# # layout
# selectp -t 0		# 选中第0个窗格
# splitw  -h -p 50	# 将其分成左右两个
# # split current pane and run 'vim' command inside the new one
# # splitw  -h -p 50 'vim'	
# selectp -t 1		# 选中第1个，也就是右边的那个
# splitw  -v -p 50	# 将其分成上下两个
# selectp -t 0		# 返回第0个

